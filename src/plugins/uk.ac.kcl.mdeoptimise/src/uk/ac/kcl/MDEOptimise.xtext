grammar uk.ac.kcl.MDEOptimise with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate mdeoptimise "http://www.ac.uk/kcl/MDEOptimise"

Optimisation:
	basepath=BasepathSpec
	metamodel=MetaModelSpec
	/*fitness+=FitnessFunctionSpec+*/
	objectives+=ObjectiveInterpreterSpec+
	constraints+=ConstraintInterpreterSpec?
	evolvers+=EvolverSpec+
	optimisation=OptimisationSpec
;

/**
 * Use this to identify a basepath to be set in the HenshinResourceSet so that Henshin 
 * transformations referencing file-based meta-models through relative paths will work 
 * correctly. This will happen mainly when working with dynamic instances rather than 
 * fully generated and registered metamodels. All further URLs should be either absolute 
 * or relative to this basepath.
 */
BasepathSpec:
	"basepath" location=URL
;

MetaModelSpec:
	"metamodel" location=URL
;

ObjectiveInterpreterSpec:
	"objective" objectiveName=ENTITY_NAME objectiveTendency=OBJECTIVE_TENDENCY objectiveType=ENTITY_TYPE "{" (objectiveSpec=STRING) "}"
;

ConstraintInterpreterSpec:
	"constraint" constraintName=ENTITY_NAME constraintType=ENTITY_TYPE "{" (constraintSpec=STRING) "}"
;

EvolverSpec:
	// This expects to be passed in a Henshin model
	// TODO We may also want to allow the specification of parameters, but not for now. 
	"evolve" "using" rule_location=URL
	         "unit" unit=STRING
;

OptimisationSpec:
	"optimisation" "provider" algorithmFactory=ALGORITHM_FACTORY
				"algorithm" algorithmName=ALGORITHM_NAME
				"evolutions" algorithmEvolutions=INT
				"population" algorithmPopulation=INT
;

terminal ALGORITHM_FACTORY returns ecore::EString:
	('moea'|'ecj')
;

//One initial algorithm - org.moeaframework.algorithm.StandardAlgorithms
//These should each require its own properties 
terminal ALGORITHM_NAME returns ecore::EString:
	('eMOEA' | 'eNSGAII' | 'NSGAII'| 'NSGAIII' | 'SPEA2')
;

terminal URL returns ecore::EString:
	'<' -> '>'
;

terminal OBJECTIVE_TENDENCY returns ecore::EString:
	('minimise'|'maximise')
;

terminal ENTITY_TYPE returns ecore::EString:
	('java'|'ocl')
;

terminal ENTITY_NAME returns ecore::EString:
	('a'..'z'|'A'..'Z')+
;